export default defineNuxtRouteMiddleware((to, from) => {
  // Solo ejecutar en el cliente
  if (process.server) return

  const userStore = useUserStore()
  
  // Si no estÃ¡ en modo demo, permitir acceso
  if (!userStore.isDemoMode) {
    return
  }
  
  // Lista de rutas permitidas para visitantes (modo demo)
  const allowedRoutes = [
    '/dashboard',
    '/', // PÃ¡gina principal
    '/auth/login', // Para poder volver al login
    '/demo-test' // PÃ¡gina de prueba
  ]
  
  // Verificar si la ruta actual estÃ¡ permitida
  const isRouteAllowed = allowedRoutes.some(route => {
    // Manejar rutas exactas y rutas que empiecen con el patrÃ³n
    if (route === '/') {
      return to.path === '/'
    }
    return to.path.startsWith(route)
  })
  
  if (!isRouteAllowed) {
    console.log('ðŸš« Visitor block: Acceso bloqueado a', to.path, 'para visitante')
    
    // Mostrar notificaciÃ³n de acceso bloqueado
    if (process.client) {
      // Usar el composable de toast si estÃ¡ disponible
      const { toast } = useToastNotifications()
      toast.warning('Esta funcionalidad no estÃ¡ disponible en modo demo')
    }
    
    // Redirigir al dashboard
    return navigateTo('/dashboard')
  }
  
  console.log('âœ… Visitor block: Acceso permitido a', to.path, 'para visitante')
}) 